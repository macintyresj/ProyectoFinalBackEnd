<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    

</head>

<body>
    <nav class="navbar navbar-dark bg-dark navbar-expand-sm">
        <div class="container">
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbar-list-4"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse justify-content-end" id="navbar-list-4">
                <ul class="navbar-nav align-items-center">
                    <li class="nav-item">
                        <a class="nav-link" aria-current="page" href="/">TIENDA</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" aria-current="page" href="carrito.html">CARRITO</a>
                    </li>
                    <li id="user" class="nav-item dropdown"></li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container py-5">

        <a class="btn text-light mb-2" style="background-color: #e64942;"href="/">Volver</a>

        <!-- CANAL DE CHAT -->
        <div class="card mb-4">
            <div class="card-header">
                <h2>CHAT</h2>
            </div>
            <div class="card-body">

                <div id="messages" class="mb-4"></div>

                <form class="row row-cols-lg-auto g-3 align-items-center" onsubmit="return addMessage(this)">
                    <div class="col-3">
                        <input class="form-control" type="email" id="email" placeholder="Aquí tu email..." required>
                    </div>
                    <div class="col-9">
                        <input class="form-control" type="text" id="message" placeholder="Aquí tu consulta..." required>
                    </div>
                    <div class="col-12">
                        <input class="btn text-light my-2" style="background-color: #a3dd82;" type="submit" value="Enviar">
                    </div>
                </form>

            </div>
        </div>

    </div>


    <script src="/socket.io/socket.io.js"></script>
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
        integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
        crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"
        integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
        crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"
        integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
        crossorigin="anonymous"></script>


    <script>
        // inicializamos la conexion
        const socket = io.connect();

        // recibo probables mensajes de error desde el servidor
        socket.on('error', data => {
            swal("Ouch!", data.error, "error");
        });


        // renderiza template con nuevos mensajes
        function render(messages) {
            if (messages.length > 0) {
                var html = messages.map((elem) => {
                    return (`
                <div class="mb-2">
                    
                    <strong style="color:#7cd1f9;">${elem.email}</strong> <span style="color: #e64942;">[${elem.fyh}]</span>:
                    <em style="color:#a3dd92;">${elem.cuerpo}</em>
                </div>
            `)
                }).join(" ");
                document.getElementById('messages').innerHTML = html;
            } else {
                // si no hay mensajes
                var html = `
                <div>
                    <strong style="color: #e64942;"> Ouch! No hay mensajes aún...</strong>
                </div>`;
                document.getElementById('messages').innerHTML = html;
            }
        }


        // se ejecuta cuando enviamos un nuevo mensaje
        function addMessage(e) {
            let messages = {
                email: document.getElementById('email').value,
                cuerpo: document.getElementById('message').value,
            };
            socket.emit('newMessage', messages);
            document.getElementById('message').value = "";
            return false;
        }


        // recibimos los mensajes del servidor y renderizamos
        socket.on('messages', messages => {
            render(messages);
        });
    </script>

</body>

</html>